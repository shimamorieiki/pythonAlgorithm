# 座標平面上に N 個の町があります。
# 町 i は、座標 ( xi , yi ) に位置しています。
# 町 i と町 j の間の距離は √(xi−xj)2+(yi−yj)2 です。
# これらの町を全て 1 回ずつ訪れるとき、町を訪れる経路は全部で N! 通りあります。
# 1 番目に訪れる町から出発し、2 番目に訪れる町、3 番目に訪れる町、…、を経由し、
# N 番目に訪れる町に到着するまでの移動距離 (町から町への移動は直線移動とします) を、
# その経路の長さとします。これらの N! 通りの経路の長さの平均値を計算してください。
# 制約
# 2≤N≤8
# −1000≤xi≤1000
# −1000≤yi≤1000
# (xi,yi)≠(xj,yj) ( i≠j のとき)
# (21:12 追記) 入力中の値はすべて整数である。

# 3
# 0 0
# 1 0
# 0 1

# 2.2761423749

# まあ高々8! = 40000くらいなら全部出しゃいいやん
import math
N = int(input())
a = []
for i in range(N):
    a.append(list(map(int,input().split(" "))))
res = 0
for i in range(N):
    for j in range(i):
        res += math.sqrt((a[i][0]-a[j][0])**2 + (a[i][1]-a[j][1])**2)

print(res * math.factorial(N-1)*2 / math.factorial(N))

# AC 21
# math には階乗計算factorialがあるので使えるようになるといい
# 同じくイテレータで順列の列挙もできるらしいので覚えておきたい