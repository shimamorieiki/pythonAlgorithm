# 高橋君は無限に広い掛け算表の上にいます。
# 掛け算表のマス (i,j) には整数 i×j が書かれており、高橋君は最初 (1,1) にいます。
# 高橋君は 1 回の移動で (i,j) から (i+1,j) か (i,j+1) のどちらかにのみ移ることができます。
# 整数 N が与えられるので、N が書かれているマスに到達するまでに必要な移動回数の最小値を求めてください。
# 制約
# 2≤N≤10^12

# Nは整数である。
# 10

# 5

# 要は整数Nを２つの数の積で表したときに和が最小になるようにしたい
import math
N = int(input())
res = math.inf
for i in range(1,math.floor(math.sqrt(N))+2):
    if N % i == 0:
        res = min(res,i + N//i)        
print(res-2)

# AC 7