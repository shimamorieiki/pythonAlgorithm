# Atcoder国に、 1本の東西方向に走る鉄道が完成しました。
# この鉄道には N個の駅があり、西から順に 1,2,...,N の番号がついています。
# 明日、鉄道の開通式が開かれます。
# この鉄道では、1≦i≦N−1 を満たす全ての整数 i に対して、駅 i から駅 i+1 に、
# Ci秒で向かう列車が運行されます。ただし、これら以外の列車は運行されません。

# 駅 i から駅 i+1 に移動する列車のうち最初の列車は、開通式開始 Si 秒後に駅 i を発車し、
# その後は Fi 秒おきに駅 i を発車する列車があります。

# また、Si は Fi で割り切れることが保証されます。
# つまり、A％B で A を B で割った余りを表すとき、
# Si≦t,t％Fi=0 を満たす全ての t に対してのみ、
# 開通式開始 t 秒後に駅 i を出発し、開通式開始 t+Ci 秒後に駅 i+1 に到着する列車があります。

# 列車の乗り降りにかかる時間を考えないとき、全ての駅 i に対して、開通式開始時に駅 i にいる場合、
# 駅 Nに到着できるのは最も早くて開通式開始何秒後か、答えてください。

# 制約
# 1≦N≦500
# 1≦Ci≦100
# 1≦Si≦105
# 1≦Fi≦100
# Si％Fi=0
# 入力は全て整数

# 3
# 6 5 1
# 1 10 1

# 二回目の解答



# 一回目の解答

N = 3
a = [[],[6,5,1],[1,10,1]]
fastest = [0]*(N+1)
# N =int(input())
# a= []
# a.append([])
# for i in range(N-1):
#     a.append(list(map(int,input().split(" "))))
print(a)
fastest[N-1] = a[N-1][0]+a[N-1][1]

for i in reversed(range(1,N-1)):
    if a[i][0]+a[i][1] < a[i+1][i] : 
        fastest[i] = fastest[i+1]
    elif a[i][0]+a[i][1] > a[i+1][i] and (a[i][0]+a[i][1])%a[i][2] :
        for j in range(i+1,N-1):
            fastest[i] += 2

# やってる方針は間違ってなさそうだけど、ちょっとうまく実装の感覚がいかなかった
#AC 解答見た