# N 個の整数 A1,A2,...,AN が黒板に書かれています。
# あなたはこの中から整数を 1 つ選んで、1 以上 10^9 以下の好きな整数に書き換えます。
# 元の整数と同じ整数に書き換えても構いません。
# 書き換えた後の N 個の整数の最大公約数の最大値を求めてください。
# 制約
# 入力は全て整数である。
# 2≤N≤10^5
# 1≤Ai≤10^9

# 3
# 7 6 8

# 2
import math

N = 3
a = [7,6,8]

# N = int(input())
# a = list(map(int,input().split(" ")))

if N == 2:
    print(max(a[0],a[1]))
elif N == 3:
    x1 = math.gcd(a[0],a[1])
    x2 = math.gcd(a[1],a[2])
    x3 = math.gcd(a[0],a[2])
    print(max(x1,x2,x3))
else:
    x1 = math.gcd(a[0],a[1])
    x2 = math.gcd(a[1],a[2])
    x3 = math.gcd(a[0],a[2])
    for i in a[3:]:
        pass
# 一個だけしか書き換えられないので、最初３つでもわかるのでは？
# AC 解答見た わからんくなった
# 10^10 とか 10^14なら回す方法がわかったけどそれより小さくならない
# 複数の数の最大公約数をいかに高速に求めるかが本質だった。むずい