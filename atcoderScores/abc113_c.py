# Atcoder国には N 個の県があり、これらの県には合計で M 個の市が属しています。
# 市 i が誕生したのは Yi 年であり、県 Pi に属しています。
# ただし、同じ年に誕生した市が複数存在することはないとします。
# それぞれの市に 12 桁の認識番号を割り振ることとなりました。

# 市 i が 県 Pi に属する市の中で x 番目に誕生した市のとき、
# 市 i の認識番号の上 6 桁は Pi、下 6 桁は x となります。
# ただし、Pi や x が 6 桁に満たない場合は 6 桁になるまで 0 を左に追加するものとします。
# 全ての市の認識番号を求めてください。
# ただし、市が 1 つも属さない県がある場合に注意してください。

# 制約
# 1≤N≤10^5
# 1≤M≤10^5
# 1≤Pi≤N
# 1≤Yi≤10^9
# Yiは全て異なる
# 入力は全て整数

# 2 3
# 1 32
# 2 63
# 1 12

# 000001000002
# 000002000001
# 000001000001

# N = 2
# M = 3
# a = [[1,32],[2,63],[1,12]]

N,M = map(int,input().split(" "))
count = 0
a = []
pre  = [1]*(N+1)
for i in range(M):
    x = list(map(int,input().split(" ")))
    x.append(count)
    a.append(x)
    count += 1
a.sort(key=lambda a:a[1])
for i in a:
    i.append(pre[i[0]])
    pre[i[0]]+=1
a.sort(key=lambda a:a[2])
for i in a:
    print("{:06d}{:06d}".format(i[0],i[3]))
# 何がめんどいって順番を確定させた後に入れた順に出さないといけない
# AC 28