# H 行 W 列のマス目があります。
# このマス目の i 行目 j 列目のマスをマス (i,j) と呼ぶことにします。
# このマス目の上には N 個の電球と M 個のブロックが置かれていて、
# i 個目の電球はマス (Ai,Bi) に、i 個目のブロックはマス (Ci,Di) に置かれています。
# 一つのマスにある電球とブロックは合計で高々一つです。
# 全ての電球は、ブロックが置かれているマスに到達するまで届く光を上下左右の 4 方向に放ちます。
# 電球が置かれているマス自身にも光が届くものとします。
# マス目上のブロックの置かれていないマスのうち電球の光が届くものの数を求めてください。
# 制約
# 1≤H,W≤1500
# 1≤N≤5×10^5
# 1≤M≤10^5
# 1≤Ai≤H
# 1≤Bi≤W
# 1≤Ci≤H
# 1≤Di≤W
# (Ai,Bi)≠(Aj,Bj)  (i≠j)
# (Ci,Di)≠(Cj,Dj)  (i≠j)
# (Ai,Bi)≠(Cj,Dj)
# 入力はすべて整数

# 3 3 2 1
# 1 1
# 2 3
# 2 2

# 7
H,W,N,M = 3,3,2,1
l = [[1,1],[2,3],[]]
b = [[2,2],[]]
# H,W,N,M = map(int,input().split(" "))
# l = []
# b = []
# for i in range(N):
#     l.append(list(map(int,input().split(" "))))
# l.append([])
# for i in range(M):
#     b.append(list(map(int,input().split(" "))))
# b.append([])

g = [[0]*(W+1) for i in range(H+1)]
for i in l[:-1]:
    g[i[1]][i[0]] = 1
for i in b[:-1]:
    g[i[1]][i[0]] = 2
print(l,b,g)
# 計算量増えていいならどうにかするけど、これだと多分無理だと思う