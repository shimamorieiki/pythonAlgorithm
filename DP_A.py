# 4
# 10 30 40 20
# 
# 2≤N≤105
# 1≤hi≤104
# N 個の足場があります。 足場には 1,2,…,N と番号が振られています。 
# 各 i (1≤i≤N) について、足場 i の高さは hiです。最初、足場 1にカエルがいます。
#  カエルは次の行動を何回か繰り返し、足場 Nまで辿り着こうとしています。
# 足場 iにいるとき、足場 i+1 または i+2 へジャンプする。 
# このとき、ジャンプ先の足場を j とすると、コスト |hi−hj|を支払う。
# カエルが足場 Nに辿り着くまでに支払うコストの総和の最小値を求めてください。

# dp[i] 足場iにいるときのそこまでの移動にかかったコストの最小値
# dp[i + 1] = min(dp[i]+|hi-hi+1|,dp[i-1]+|hi-1 - hi+1|)
def solve(n,h):
    dp = [0]*(n+1)
    for i in range(2,n+1):
        if i == 2:
            dp[i] = dp[i-1]+abs(h[i-2]-h[i-1])
        else:
            dp[i] = min(dp[i-1]+abs(h[i-2]-h[i-1]),dp[i-2]+abs(h[i-1] - h[i-3]))
    print(dp[n])
h = [10,30,40,20,30,40,50,10,40,20]
n = len(h)
solve(n,h)